name: kotlin-collection-manager
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - kafka-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    hostname: kafka1
    networks:
      - kafka-net
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka1

  kafka-ui:
    image: provectuslabs/kafka-ui
    networks:
      - kafka-net
    depends_on:
      - zookeeper
      - kafka-1
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - backend-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    container_name: grafana
    image: grafana/grafana:10.4.4
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - backend-net

networks:
  kafka-net:
    driver: bridge
  backend-net:
    driver: bridge

volumes:
  grafana-storage:
